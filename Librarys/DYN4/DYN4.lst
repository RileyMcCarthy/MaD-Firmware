00000                 | 
00000                 | #line 1 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/DYN4/DYN4.c"
00000                 | #line 1 "DYN4.h"
00000                 | #line 4 "DYN4.h"
00000                 | #line 1 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Utility/Error.h"
00000                 | #line 14 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Utility/Error.h"
00000                 | typedef enum Error_e
00000                 | {
00000                 |     SUCCESS,
00000                 |     FAIL,
00000                 | 
00000                 |     DISPLAY_NOT_FOUND = 2,
00000                 |     DISPLAY_PLL_FAIL,
00000                 |     DISPLAY_SDRAM_FAIL,
00000                 | 
00000                 |     RTC_RESET = 51,
00000                 |     RTC_NOT_FOUND,
00000                 | 
00000                 |     DYN4_NOT_RESPONDING = 101,
00000                 |     DYN4_CONNECTION_LOST,
00000                 |     DYN4_COG_FAIL,
00000                 | 
00000                 |     FORCEGAUGE_NOT_RESPONDING = 151,
00000                 |     FORCEGAUGE_CONNECTION_LOST,
00000                 |     FORCEGAUGE_COG_FAIL,
00000                 | 
00000                 |     JSON_FILE_ERROR = 201,
00000                 |     JSON_FILE_NOT_FOUND,
00000                 |     JSON_FILE_READ_FAIL,
00000                 |     JSON_FILE_WRITE_FAIL,
00000                 |     JSON_FILE_INVALID,
00000                 |     JSON_FILE_EMPTY,
00000                 |     JSON_FILE_NOT_VALID,
00000                 | 
00000                 |     MCP23017_NOT_FOUND = 251,
00000                 | 
00000                 | } Error;
00000                 | 
00000                 | void print_error(Error value);
00000                 | inline void seterror(Error *err, Error value);
00000                 | #line 5 "DYN4.h"
00000                 | #line 1 "C:/flexprop/include/stdbool.h"
00000                 | #line 6 "DYN4.h"
00000                 | #line 1 "C:/flexprop/include/stdint.h"
00000                 | 
00000                 | 
00000                 | 
00000                 | typedef signed char int8_t;
00000                 | typedef unsigned char uint8_t;
00000                 | 
00000                 | typedef signed short int16_t;
00000                 | typedef unsigned short uint16_t;
00000                 | 
00000                 | typedef signed long int32_t;
00000                 | typedef unsigned long uint32_t;
00000                 | 
00000                 | typedef long long int64_t;
00000                 | typedef unsigned long long uint64_t;
00000                 | 
00000                 | typedef unsigned long uintptr_t;
00000                 | typedef long intptr_t;
00000                 | 
00000                 | typedef int64_t intmax_t;
00000                 | typedef uint64_t uintmax_t;
00000                 | 
00000                 | typedef int8_t int_least8_t;
00000                 | typedef int16_t int_least16_t;
00000                 | typedef int32_t int_least32_t;
00000                 | typedef int64_t int_least64_t;
00000                 | 
00000                 | typedef uint8_t uint_least8_t;
00000                 | typedef uint16_t uint_least16_t;
00000                 | typedef uint32_t uint_least32_t;
00000                 | typedef uint64_t uint_least64_t;
00000                 | 
00000                 | typedef int32_t int_fast8_t;
00000                 | typedef int32_t int_fast16_t;
00000                 | typedef int32_t int_fast32_t;
00000                 | typedef int64_t int_fast64_t;
00000                 | 
00000                 | typedef uint32_t uint_fast8_t;
00000                 | typedef uint32_t uint_fast16_t;
00000                 | typedef uint32_t uint_fast32_t;
00000                 | typedef uint64_t uint_fast64_t;
00000                 | #line 7 "DYN4.h"
00000                 | #line 1 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Utility/Error.h"
00000                 | #line 8 "DYN4.h"
00000                 | #line 1 "C:/flexprop/include/stdlib.h"
00000                 | #line 4 "C:/flexprop/include/stdlib.h"
00000                 | #line 1 "C:/flexprop/include/compiler.h"
00000                 | #line 5 "C:/flexprop/include/stdlib.h"
00000                 | #line 1 "C:/flexprop/include/sys/size_t.h"
00000                 | 
00000                 | 
00000                 | 
00000                 | 
00000                 | 
00000                 |   typedef  unsigned long  size_t;
00000                 | #line 6 "C:/flexprop/include/stdlib.h"
00000                 | #line 1 "C:/flexprop/include/sys/wchar_t.h"
00000                 | #line 15 "C:/flexprop/include/sys/wchar_t.h"
00000                 | typedef int wchar_t;
00000                 | #line 24 "C:/flexprop/include/sys/wchar_t.h"
00000                 | typedef struct _Mbstate {
00000                 |   unsigned int total:5;
00000                 |   unsigned int left:5;
00000                 |   unsigned int partial:22;
00000                 | } _Mbstate_t;
00000                 | #line 7 "C:/flexprop/include/stdlib.h"
00000                 | #line 1 "C:/flexprop/include/sys/null.h"
00000                 | #line 8 "C:/flexprop/include/stdlib.h"
00000                 | #line 22 "C:/flexprop/include/stdlib.h"
00000                 |     double atof(const char *);
00000                 |     int atoi(const char *)  __fromfile("libc/stdlib/atoi.c") ;
00000                 |     long atol(const char *)  __fromfile("libc/stdlib/atoi.c") ;
00000                 |     long long atoll(const char *);
00000                 | 
00000                 |   long double strtold(const char *nptr, char **endptr);
00000                 |   double strtod(const char *nptr, char **endptr);
00000                 |   float strtof(const char *nptr, char **endptr);
00000                 | 
00000                 |     long strtol(const char *nptr, char **endptr, int base)  __fromfile("libc/stdlib/strtol.c") ;
00000                 |     unsigned long strtoul(const char *nptr, char **endptr, int base)  __fromfile("libc/stdlib/strtoul.c") ;
00000                 |   long long strtoll(const char *nptr, char **endptr, int base);
00000                 |   unsigned long long strtoull(const char *nptr, char **endptr, int base);
00000                 | 
00000                 | 
00000                 |     int rand(void)  __fromfile("libc/stdlib/rand.c") ;
00000                 |     void srand(unsigned int seed)  __fromfile("libc/stdlib/rand.c") ;
00000                 | 
00000                 |     void *malloc(size_t n)  __fromfile("libc/stdlib/malloc.c") ;
00000                 |     void *calloc(size_t, size_t)  __fromfile("libc/stdlib/malloc.c") ;
00000                 |     void *realloc(void *, size_t)  __fromfile("libc/stdlib/malloc.c") ;
00000                 |     void free(void *)  __fromfile("libc/stdlib/malloc.c") ;
00000                 | 
00000                 | 
00000                 |     int atexit(void (*func)(void))  __fromfile("libc/stdlib/exit.c") ;
00000                 |      void exit(int status)  __fromfile("libc/stdlib/exit.c") ;
00000                 |      void abort(void)  __fromfile("libc/stdlib/abort.c") ;
00000                 |      void _Exit(int status)  __fromfile("libc/stdlib/_Exit.c") ;
00000                 |    void _exit(int status);
00000                 | #line 56 "C:/flexprop/include/stdlib.h"
00000                 |    long labs(long l);
00000                 | 
00000                 | 
00000                 |    long long llabs(long long ll);
00000                 | 
00000                 | 
00000                 |   typedef struct {
00000                 |     int quot, rem;
00000                 |   } div_t;
00000                 | 
00000                 |   typedef struct {
00000                 |     long int quot, rem;
00000                 |   } ldiv_t;
00000                 | 
00000                 |   typedef struct {
00000                 |     long long quot, rem;
00000                 |   } lldiv_t;
00000                 | 
00000                 |   div_t div(int num, int denom);
00000                 |   ldiv_t ldiv(long num, long denom);
00000                 |   lldiv_t lldiv(long long num, long long denom);
00000                 | 
00000                 |     void qsort(void *base, size_t nmemb, size_t size, int (*compare)(const void *, const void *))  __fromfile("libc/stdlib/qsort.c") ;
00000                 |   void *bsearch(const void *key, const void *base, size_t nmemb, size_t size,
00000                 | 		int (*compare)(const void *, const void *));
00000                 | 
00000                 |     char *getenv(const char *name)  __fromfile("libc/stdlib/getenv.c") ;
00000                 |     int putenv(const char *name)  __fromfile("libc/stdlib/putenv.c") ;
00000                 | 
00000                 | 
00000     00 00 00 00 |   extern int _mb_cur_max;
00004                 | 
00004                 | 
00004                 | 
00004                 |   int mblen(const char *s, size_t n);
00004                 |   int mbtowc(wchar_t * __restrict pwc, const char * __restrict s, size_t n);
00004                 |   size_t mbstowcs(wchar_t *dest, const char *src, size_t n);
00004                 | 
00004                 | 
00004                 |   int system(const char *command);
00004                 | #line 102 "C:/flexprop/include/stdlib.h"
00004                 |     int _itoa_prec( unsigned int x, char *buf, unsigned base, int prec );
00004                 |     int _lltoa_prec( unsigned long long x, char *buf, unsigned base, int prec );
00004                 | #line 9 "DYN4.h"
00004                 | #line 1 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Utility/IOBoard.h"
00004                 | #line 4 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Utility/IOBoard.h"
00004                 | #line 1 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00004                 | #line 4 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00004                 | #line 1 "C:/flexprop/include/simpletools.h"
00004                 | #line 9 "C:/flexprop/include/simpletools.h"
00004                 | #line 1 "C:/flexprop/include/propeller2.h"
00004                 | #line 4 "C:/flexprop/include/propeller2.h"
00004                 | #line 1 "C:/flexprop/include/stdint.h"
00004                 | #line 5 "C:/flexprop/include/propeller2.h"
00004                 | #line 56 "C:/flexprop/include/propeller2.h"
00004                 | typedef struct _cartesian {
00004                 |    int32_t x, y;
00004                 | } cartesian_t;
00004                 | 
00004                 | 
00004                 | typedef struct _polar {
00004                 |    uint32_t r, t;
00004                 | } polar_t;
00004                 | 
00004                 | 
00004                 | typedef struct _counter64 {
00004                 |     uint32_t low, high;
00004                 | } counter64_t;
00004                 | #line 96 "C:/flexprop/include/propeller2.h"
00004                 | void _clkset(uint32_t clkmode, uint32_t clkfreq);
00004                 | void _hubset(uint32_t val);
00004                 | void _reboot(void);
00004                 | 
00004                 | 
00004                 | int _coginit(int cog, void *pgm, void *ptr);
00004                 | #line 116 "C:/flexprop/include/propeller2.h"
00004                 | void _cogstop(int cog);
00004                 | int _cogchk(int cog);
00004                 | int _cogid(void);
00004                 | 
00004                 | int _locknew(void);
00004                 | void _lockret(int lock);
00004                 | 
00004                 | int _locktry(int lock);
00004                 | int _lockrel(int lock);
00004                 | int _lockchk(int lock);
00004                 | 
00004                 | void _cogatn(uint32_t mask);
00004                 | int _pollatn(void);
00004                 | int _waitatn(void);
00004                 | 
00004                 | 
00004                 | cartesian_t _rotxy(cartesian_t coord, uint32_t t);
00004                 | cartesian_t _polxy(polar_t coord);
00004                 | polar_t _xypol(cartesian_t coord);
00004                 | 
00004                 | 
00004                 | uint32_t _rnd(void);
00004                 | 
00004                 | 
00004                 | int _clz(uint32_t val);
00004                 | int _encod(uint32_t val);
00004                 | uint32_t _isqrt(uint32_t val);
00004                 | 
00004                 | 
00004                 | uint32_t _cnt(void);
00004                 | uint32_t _cnth(void);
00004                 | counter64_t _cnthl();
00004                 | uint32_t _getsec();
00004                 | uint32_t _getms();
00004                 | uint32_t _getus();
00004                 | 
00004                 | uint32_t _pollcnt(uint32_t tick);
00004                 | void _waitcnt(uint32_t tick);
00004                 | 
00004                 | void _waitx(uint32_t cycles);
00004                 | void _waitsec(uint32_t seconds);
00004                 | void _waitms(uint32_t milliseconds);
00004                 | void _waitus(uint32_t microseconds);
00004                 | 
00004                 | 
00004                 | void _pinw(int pin, int val);
00004                 | void _pinl(int pin);
00004                 | void _pinh(int pin);
00004                 | void _pinnot(int pin);
00004                 | void _pinrnd(int pin);
00004                 | void _pinf(int pin);
00004                 | int _pinr(int pin);
00004                 | 
00004                 | 
00004                 | void _wrpin(int pin, uint32_t val);
00004                 | void _wxpin(int pin, uint32_t val);
00004                 | void _wypin(int pin, uint32_t val);
00004                 | void _akpin(int pin);
00004                 | uint32_t _rdpin(int pin);
00004                 | uint32_t _rqpin(int pin);
00004                 | 
00004                 | 
00004                 | void _pinstart(int pin, uint32_t mode, uint32_t xval, uint32_t yval);
00004                 | 
00004                 | void _pinclear(int pin);
00004                 | 
00004                 | 
00004                 | extern uint32_t _clockfreq(void);
00004                 | extern uint32_t _clockmode(void);
00004                 | #line 10 "C:/flexprop/include/simpletools.h"
00004                 | #line 16 "C:/flexprop/include/simpletools.h"
00004                 | #line 1 "C:/flexprop/include/libsimpletext/simpletext.h"
00004                 | #line 3 "C:/flexprop/include/libsimpletext/simpletext.h"
00004                 | #line 1 "C:/flexprop/include/stdarg.h"
00004                 | #line 4 "C:/flexprop/include/libsimpletext/simpletext.h"
00004                 | #line 12 "C:/flexprop/include/libsimpletext/simpletext.h"
00004                 | typedef struct text_struct
00004                 | {
00004                 | 
00004                 |   int (*rxChar)(struct text_struct *p);
00004                 | 
00004                 |   int (*txChar)(struct text_struct *p, int ch);
00004                 | 
00004                 |   int cogid[ 7 ];
00004                 | 
00004                 |   volatile void *devst;
00004                 | 
00004                 |   volatile int terminalEcho;
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 |   volatile char ecA;
00004                 |   volatile char ecB;
00004                 |   volatile char ecsA;
00004                 |   volatile char ecsB;
00004                 | } text_t;
00004                 | 
00004                 | char *_safe_gets(text_t *text, char *buf, int count)  __fromfile("libsimpletext/safe_gets.c") ;
00004                 | char *getStr(char *buf, int max)  __fromfile("libsimpletext/getStr.c") ;
00004                 | 
00004                 | float string2float(char *s, char **end)  __fromfile("libsimpletext/stringToFloat.c") ;
00004                 | int _doscanf(const char *str, const char *fmt,  unsigned long  args)  __fromfile("libsimpletext/doscanf.c") ;
00004                 | 
00004                 | const char* _scanf_getl(const char *str, int *dst, int base, unsigned width, int isSigned)  __fromfile("libsimpletext/scanf_getl.c") ;
00004                 | const char* _scanf_getf(const char *str, float *dst)  __fromfile("libsimpletext/scanf_getf.c") ;
00004                 | 
00004                 | int scan(const char *fmt, ...)  __fromfile("libsimpletext/scan.c") ;
00004                 | #line 17 "C:/flexprop/include/simpletools.h"
00004                 | #line 1 "C:/flexprop/include/simplei2c.h"
00004                 | #line 21 "C:/flexprop/include/simplei2c.h"
00004                 | #line 1 "C:/flexprop/include/propeller2.h"
00004                 | #line 22 "C:/flexprop/include/simplei2c.h"
00004                 | #line 26 "C:/flexprop/include/simplei2c.h"
00004                 | typedef struct i2c_st
00004                 | {
00004                 |   int scl_pin;
00004                 |   int sda_pin;
00004                 |   int drivescl;
00004                 | } i2c;
00004                 | #line 46 "C:/flexprop/include/simplei2c.h"
00004                 | i2c *i2c_open(i2c *bus, int sclPin, int sdaPin, int sclDrive) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 53 "C:/flexprop/include/simplei2c.h"
00004                 | void i2c_start(i2c *bus) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 60 "C:/flexprop/include/simplei2c.h"
00004                 | void i2c_stop(i2c *bus) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 72 "C:/flexprop/include/simplei2c.h"
00004                 | int i2c_writeByte(i2c *bus, int byte) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 83 "C:/flexprop/include/simplei2c.h"
00004                 | int i2c_readByte(i2c *bus, int ackState) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 97 "C:/flexprop/include/simplei2c.h"
00004                 | int i2c_writeData(i2c *bus, const unsigned char *data, int count) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 112 "C:/flexprop/include/simplei2c.h"
00004                 | int i2c_readData(i2c *bus, unsigned char *data, int count) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 123 "C:/flexprop/include/simplei2c.h"
00004                 | int i2c_poll(i2c *bus, int addr) __fromfile("libsimplei2c/simplei2c.c");
00004                 | #line 18 "C:/flexprop/include/simpletools.h"
00004                 | #line 30 "C:/flexprop/include/simpletools.h"
00004                 | int input(int pin)  __fromfile("libsimpletools/input.c") ;
00004                 | #line 45 "C:/flexprop/include/simpletools.h"
00004                 | unsigned get_direction(int pin)  __fromfile("libsimpletools/getDirection.c") ;
00004                 | unsigned get_directions(int startPin, int endPin)  __fromfile("libsimpletools/getDirections.c") ;
00004                 | unsigned get_output(int pin)  __fromfile("libsimpletools/getOutput.c") ;
00004                 | unsigned get_outputs(int startPin, int endPin)  __fromfile("libsimpletools/getOutputs.c") ;
00004                 | unsigned get_states(int endPin, int startPin)  __fromfile("libsimpletools/getStates.c") ;
00004                 | void set_directions(int endPin, int startPin, unsigned int pattern)  __fromfile("libsimpletools/setDirections.c") ;
00004                 | void set_outputs(int endPin, int startPin, unsigned int pattern)  __fromfile("libsimpletools/setOutputs.c") ;
00004                 | 
00004                 | long count(int pin, long duration, int pinToCount = -1)  __fromfile("libsimpletools/count.c") ;
00004                 | 
00004                 | void dac_ctr(int pin, int channel, int dacVal)  __fromfile("libsimpletools/dac.c") ;
00004                 | void dac_ctr_res(int bits)  __fromfile("libsimpletools/dac.c") ;
00004                 | void dac_ctr_stop(void)  __fromfile("libsimpletools/dac.c") ;
00004                 | 
00004                 | void freqout(int pin, int msTime, int frequency)  __fromfile("libsimpletools/freqout.c") ;
00004                 | 
00004                 | int pwm_start(unsigned int cycleMicroseconds)  __fromfile("libsimpletools/pwm.c") ;
00004                 | void pwm_set(int pin, int channel, int tHigh)  __fromfile("libsimpletools/pwm.c") ;
00004                 | void pwm_stop(void)  __fromfile("libsimpletools/pwm.c") ;
00004                 | 
00004                 | long pulse_in(int pin, int state)  __fromfile("libsimpletools/pulseIn.c") ;
00004                 | void pulse_out(int pin, int time)  __fromfile("libsimpletools/pulseOut.c") ;
00004                 | 
00004                 | long rc_time(int pin, int state)  __fromfile("libsimpletools/rcTime.c") ;
00004                 | 
00004                 | void square_wave(int pin, int channel, int freq)  __fromfile("libsimpletools/squareWave.c") ;
00004                 | void square_wave_stop(void)  __fromfile("libsimpletools/squareWave.c") ;
00004                 | 
00004                 | 
00004                 | void square_wave_stop_pin(int pin)  __fromfile("libsimpletools/squareWave.c") ;
00004                 | #line 79 "C:/flexprop/include/simpletools.h"
00004                 | int int_fraction(int a, int b, int shift)  __fromfile("libsimpletools/squareWave.c") ;
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 | 
00004                 | int shift_in(int pinDat, int pinClk, int mode, int bits)  __fromfile("libsimpletools/shiftIn.c") ;
00004                 | void shift_out(int pinDat, int pinClk, int mode, int bits, int value)  __fromfile("libsimpletools/shiftOut.c") ;
00004                 | 
00004                 | 
00004     00 00 00 00 | extern unsigned int st_buscnt;
00008                 | 
00008                 | i2c *i2c_newbus(int sclPin, int sdaPin, int sclDrive)  __fromfile("libsimpletools/i2c_init.c") ;
00008                 | int i2c_out(i2c *busID, int i2cAddr, int memAddr, int memAddrCount, const unsigned char *data, int dataCount)  __fromfile("libsimpletools/i2c_out.c") ;
00008                 | int i2c_in(i2c *busID, int i2cAddr, int memAddr, int memAddrCount, unsigned char *data, int dataCount)  __fromfile("libsimpletools/i2c_in.c") ;
00008                 | int i2c_busy(i2c *busID, int i2cAddr)  __fromfile("libsimpletools/i2c_busy.c") ;
00008                 | 
00008                 | 
00008     00 00 00 00 | extern i2c *st_eeprom;
0000c     00 00 00 00 | extern int st_eeInitFlag;
00010                 | #line 114 "C:/flexprop/include/simpletools.h"
00010                 | void ee_config(int sclPin, int sdaPin, int sclDrive)  __fromfile("libsimpletools/eeprom_initSclDrive.c") ;
00010                 | void ee_init()  __fromfile("libsimpletools/eeprom_init.c") ;
00010                 | void ee_putByte(unsigned char value, int addr)  __fromfile("libsimpletools/eeprom_putByte.c") ;
00010                 | char ee_getByte(int addr)  __fromfile("libsimpletools/eeprom_getByte.c") ;
00010                 | void ee_putInt(int value, int addr)  __fromfile("libsimpletools/eeprom_putInt.c") ;
00010                 | int ee_getInt(int addr)  __fromfile("libsimpletools/eeprom_getInt.c") ;
00010                 | void ee_putStr(unsigned char *s, int n, int addr)  __fromfile("libsimpletools/eeprom_putStr.c") ;
00010                 | unsigned char* ee_getStr(unsigned char* s, int n, int addr)  __fromfile("libsimpletools/eeprom_getStr.c") ;
00010                 | void ee_putFloat32(float value, int addr)  __fromfile("libsimpletools/eeprom_putFloat.c") ;
00010                 | float ee_getFloat32(int addr)  __fromfile("libsimpletools/eeprom_getFloat.c") ;
00010                 | 
00010                 | float constrainFloat(float value, float min, float max)  __fromfile("libsimpletools/constrainFloat.c") ;
00010                 | int constrainInt(int value, int min, int max)  __fromfile("libsimpletools/constrainInt.c") ;
00010                 | 
00010                 | void endianSwap(void *resultAddr, void *varAddr, int byteCount)  __fromfile("libsimpletools/endianSwap.c") ;
00010                 | 
00010                 | float mapFloat(float value, float fromMin, float fromMax, float toMin, float toMax)  __fromfile("libsimpletools/mapFloat.c") ;
00010                 | int mapInt(int value, int fromMin, int fromMax, int toMin, int toMax)  __fromfile("libsimpletools/mapInt.c") ;
00010                 | 
00010                 | int random(int limitLow, int limitHigh)  __fromfile("libsimpletools/random.c") ;
00010                 | 
00010                 | 
00010                 | void cog_end(int *coginfo)  __fromfile("libsimpletools/cogend.c") ;
00010                 | int cog_num(int *coginfo)  __fromfile("libsimpletools/cognum.c") ;
00010                 | int* cog_run(void (*function)(void *par), int stacksize)  __fromfile("libsimpletools/cogrun.c") ;
00010                 | #line 5 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00010                 | #line 1 "C:/flexprop/include/stdbool.h"
00010                 | #line 6 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00010                 | #line 1 "C:/flexprop/include/stdlib.h"
00010                 | #line 7 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00010                 | #line 20 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00010                 | typedef struct __using("jm_i2c.spin2") I2CBus;
00010                 | 
00010                 | typedef struct MCP23017_t
00010                 | {
00010                 |     I2CBus i2cBus;
00010                 |     uint8_t writeAddr, readAddr;
00010                 |     uint8_t dira, dirb;
00010                 | } MCP23017;
00010                 | 
00010                 | _Bool  mcp23017_begin(MCP23017 *mcp23017, uint8_t addr, int sda, int scl);
00010                 | void mcp_update_register(MCP23017 *mcp23017);
00010                 | #line 38 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/MCP23017/MCP23017.h"
00010                 | void mcp_set_direction(MCP23017 *mcp23017, uint16_t pin, uint8_t reg, uint8_t direction);
00010                 | uint8_t mcp_get_direction(MCP23017 *mcp23017, uint16_t pin, uint8_t reg);
00010                 | 
00010                 | void mcp_set_pin(MCP23017 *mcp23017, uint16_t pin, uint8_t reg, uint8_t output);
00010                 | uint8_t mcp_get_pin(MCP23017 *mcp23017, uint16_t pin, uint8_t reg);
00010                 | 
00010                 | void mcp_set_pullup(MCP23017 *mcp23017, uint16_t pin, uint8_t reg, uint8_t output);
00010                 | uint8_t mcp_get_pullup(MCP23017 *mcp23017, uint16_t pin, uint8_t reg);
00010                 | #line 5 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/include/Utility/IOBoard.h"
00010                 | #line 10 "DYN4.h"
00010                 | #line 1 "C:/flexprop/include/stdint.h"
00010                 | #line 11 "DYN4.h"
00010                 | #line 53 "DYN4.h"
00010                 | typedef struct __using("jm_fullduplexserial.spin2") FDS;
00010                 | #line 59 "DYN4.h"
00010                 | typedef enum Alarm_e
00010                 | {
00010                 |     noAlarm,
00010                 |     phaseError,
00010                 |     overCurrentError,
00010                 |     overHeatPwrError,
00010                 |     crcError
00010                 | } DYN4_Alarm;
00010                 | #line 72 "DYN4.h"
00010                 | typedef struct DYN4Status_s
00010                 | {
00010                 |     _Bool  onRange;
00010                 |     _Bool  motorFree;
00010                 |     DYN4_Alarm alarm;
00010                 |     _Bool  motorBusy;
00010                 |     _Bool  jp3P2Status;
00010                 | } DYN4_Status;
00010                 | #line 85 "DYN4.h"
00010                 | typedef struct DYN4_s
00010                 | {
00010                 |     int device_id;
00010                 |     FDS serial;
00010                 | } DYN4;
00010                 | 
00010                 | typedef union Data_union
00010                 | {
00010                 |     uint16_t wval;
00010                 |     int32_t val;
00010                 |     uint8_t bval[4];
00010                 | } DataUnion;
00010                 | 
00010                 | Error dyn4_begin(DYN4 *dyn4, int rx, int tx, int new_device_id);
00010                 | 
00010                 | int dyn4_getPosition(DYN4 *dyn4);
00010                 | 
00010                 | void dyn4_send_command(DYN4 *dyn4, uint8_t command, int32_t data);
00010                 | int dyn4_read_command(DYN4 *dyn4, int command);
00010                 | Error dyn4_get_status(DYN4 *dyn4, DYN4_Status *status);
00010                 | #line 2 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/DYN4/DYN4.c"
00010                 | #line 21 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/DYN4/DYN4.c"
00010                 | Error dyn4_begin(DYN4 *dyn4, int rx, int tx, int new_device_id)
00010                 | {
00010                 |     dyn4->device_id = new_device_id;
00010                 |     dyn4->serial.start(rx, tx, 2, 38400);
00010                 |     DYN4_Status status;
00010                 |     Error ret = dyn4_get_status(dyn4, &status);
00010                 |     if (ret != SUCCESS)
00010                 |     {
00010                 | 
00010                 |         return ret;
00010                 |     }
00010                 | 
00010                 | 
00010                 | 
00010                 | 
00010                 |     return ret;
00010                 | }
00010                 | #line 46 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/DYN4/DYN4.c"
00010                 | Error dyn4_get_status(DYN4 *dyn4, DYN4_Status *status)
00010                 | {
00010                 |     uint8_t statusReg;
00010                 | 
00010                 |     dyn4_send_command(dyn4,  0x09 , 1);
00010                 |     if ((statusReg = dyn4_read_command(dyn4,  0x19 )) == -1)
00010                 |     {
00010                 |         return DYN4_NOT_RESPONDING;
00010                 |     }
00010                 |     status->onRange = (statusReg & (0x01 <<  0x00 )) >>  0x00 ;
00010                 |     status->motorFree = (statusReg & (0x01 <<  0x01 )) >>  0x01 ;
00010                 |     status->alarm = (statusReg & (0x07 <<  0x02 )) >>  0x02 ;
00010                 |     status->motorBusy = (statusReg & (0x01 <<  0x05 )) >>  0x05 ;
00010                 |     status->jp3P2Status = (statusReg & (0x01 <<  0x06 )) >>  0x06 ;
00010                 |     return SUCCESS;
00010                 | }
00010                 | #line 71 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/DYN4/DYN4.c"
00010                 | int dyn4_read_command(DYN4 *dyn4, int command)
00010                 | {
00010                 |     uint8_t byte;
00010                 | 
00010                 |     for (int i = 0; i < 10; i++)
00010                 |     {
00010                 | 
00010                 |         byte = (uint8_t)dyn4->serial.rxtime(100);
00010                 | 
00010                 |         if (byte == dyn4->device_id)
00010                 |         {
00010                 |             break;
00010                 |         }
00010                 |         else
00010                 |         {
00010                 |             byte = -1;
00010                 |         }
00010                 |     }
00010                 |     if (byte == -1)
00010                 |     {
00010                 |         return -1;
00010                 |     }
00010                 | 
00010                 |     byte = (uint8_t)dyn4->serial.rxtime(200);
00010                 | 
00010                 |     if (byte != command)
00010                 |     {
00010                 | 
00010                 |     }
00010                 |     int n = ((byte >> 5) & 0x03) + 1;
00010                 | 
00010                 |     int data = 0;
00010                 |     for (int i = n - 1; i >= 0; i--)
00010                 |     {
00010                 |         data += ((uint8_t)dyn4->serial.rxtime(200) & 0x7F) << (7 * i);
00010                 |     }
00010                 |     return data;
00010                 | }
00010                 | #line 117 "C:/Users/riley.m/Tensile-Testing-Machine/Firmware/MaD_Firmware/Librarys/DYN4/DYN4.c"
00010                 | void dyn4_send_command(DYN4 *dyn4, uint8_t command, int32_t data)
00010                 | {
00010                 |     int n = 0;
00010                 |     if (data > 0xFFFFF || data < -0x100000)
00010                 |     {
00010                 |         n = 4;
00010                 |     }
00010                 |     else if (data > 0x1FFF || data < -0x2000)
00010                 |     {
00010                 |         n = 3;
00010                 |     }
00010                 |     else if (data > 0x3F || data < -0x40)
00010                 |     {
00010                 |         n = 2;
00010                 |     }
00010                 |     else
00010                 |     {
00010                 |         n = 1;
00010                 |     }
00010                 |     int package_size = 3 + n;
00010                 |     uint8_t bytes[10];
00010                 |     bytes[package_size - 1] = dyn4->device_id;
00010                 |     bytes[package_size - 2] = 0x80 + ((n - 1) << 5) + command;
00010                 | 
00010                 |     int totalData = bytes[package_size - 1] + bytes[package_size - 2];
00010                 |     for (int i = 0; i < n; i++)
00010                 |     {
00010                 |         bytes[package_size - 3 - i] = 0x80 + ((data >> ((n - i - 1) * 7)) & 0x7F);
00010                 | 
00010                 |         totalData += bytes[package_size - 3 - i];
00010                 |     }
00010                 |     bytes[0] = 0x80 + (totalData % 128);
00010                 | 
00010                 |     for (int i = package_size - 1; i >= 0; i--)
00010                 |     {
00010                 |         dyn4->serial.tx(bytes[i]);
00010                 | 
00010                 |     }
00010                 | }
00010                 | 
