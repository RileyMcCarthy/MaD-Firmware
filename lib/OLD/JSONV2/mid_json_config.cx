//
// Created by Riley McCarthy on 25/04/24.
//
/**********************************************************************
 * Includes
 **********************************************************************/
#include "mid_json_config.h"
/**********************************************************************
 * Constants
 **********************************************************************/

/*********************************************************************
 * Macros
 **********************************************************************/
#define STRINGIFY(x) #x
#define LENGTH(x) (sizeof(STRINGIFY(x)) - 1)
#define MAX_INT_DIGITS (LENGTH(INT_MAX) + 1)
#define STRLEN(s) (sizeof(s) / sizeof(s[0]))
/**********************************************************************
 * Typedefs
 **********************************************************************/

/**********************************************************************
 * External Variables
 **********************************************************************/

/**********************************************************************
 * Private Variable Definitions
 **********************************************************************/
#define MID_JSON_DEFINE_DECODER(channel, type) \
    type mid_json_decoderBuffer##channel;      \
    static const struct json_attr_t json_attrs_##channel[]

#define MID_JSON_DEFINE_ENCODER(channel, type, fmt, argSize)              \
    static type mid_json_encoderBuffer##channel;                          \
    static const char mid_json_format_##channel[] = fmt;                  \
    const uint32_t mid_json_encoderSize##channel = argSize + STRLEN(fmt); \
    static const void *mid_json_encoderArgs##channel[]

/**********************************************************************
 * Private Function Prototypes
 **********************************************************************/
// maybe if I make a channel for each cog, so 2 for sample jsons that are used in comm and monitor.
// this would allow it to not need locking and require no allocation of memory per cog
MID_JSON_DEFINE_DECODER(notification, mid_json_notification_S) = {
    {"Type", t_integer, mid_json_decoderBuffernotification.type},
    {"Message", t_string, mid_json_decoderBuffernotification.message},
    {NULL},
};

MID_JSON_DEFINE_ENCODER(
    notification, mid_json_notification_S,
    "{\"Type\":%d,\"Message\":%d}",
    MAX_INT_DIGITS + MAX_INT_DIGITS) = {
    &mid_json_encoderBuffernotification.type,
    &mid_json_encoderBuffernotification.message,
}

#define MID_JSON_CREATE_CHANNEL(channel)      \
    {                                         \
        {                                     \
            mid_json_format_##channel,        \
            mid_json_encoderArgs##channel,    \
            mid_json_encoderSize##channel,    \
        },                                    \
        {                                     \
            &mid_json_decoderBuffer##channel, \
                json_attrs_##channel,         \
        }                                     \
    }

mid_json_config_S mid_json_config = {
    MID_JSON_CREATE_CHANNEL(notification),
};

/**********************************************************************
 * Private Function Definitions
 **********************************************************************/

/**********************************************************************
 * Public Function Definitions
 **********************************************************************/

/**********************************************************************
 * End of File
 **********************************************************************/
